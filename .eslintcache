[{"/Users/leandrobaseggio/WCS/react-countries/src/index.js":"1","/Users/leandrobaseggio/WCS/react-countries/src/App.js":"2","/Users/leandrobaseggio/WCS/react-countries/src/components/CountryList.js":"3","/Users/leandrobaseggio/WCS/react-countries/src/components/CountryCard.js":"4","/Users/leandrobaseggio/WCS/react-countries/src/contexts/CountriesContext.jsx":"5","/Users/leandrobaseggio/WCS/react-countries/src/components/CountryDetails.js":"6","/Users/leandrobaseggio/WCS/react-countries/src/components/NavBar.js":"7"},{"size":219,"mtime":1612085975806,"results":"8","hashOfConfig":"9"},{"size":699,"mtime":1612186586031,"results":"10","hashOfConfig":"9"},{"size":7203,"mtime":1612211355106,"results":"11","hashOfConfig":"9"},{"size":1937,"mtime":1612269141039,"results":"12","hashOfConfig":"9"},{"size":3298,"mtime":1612198053621,"results":"13","hashOfConfig":"9"},{"size":2269,"mtime":1612296099896,"results":"14","hashOfConfig":"9"},{"size":300,"mtime":1612040965947,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"15ij27i",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/leandrobaseggio/WCS/react-countries/src/index.js",[],["32","33"],"/Users/leandrobaseggio/WCS/react-countries/src/App.js",[],"/Users/leandrobaseggio/WCS/react-countries/src/components/CountryList.js",["34"],"import React from \"react\";\nimport { CountriesContext } from \"../contexts/CountriesContext\";\nimport CountryCard from \"./CountryCard\";\nimport \"./styling.css\";\n\nexport default function CountryList(props) {\n  const {\n    countries,\n    countriesFavoriteList,\n    populationAscending,\n    populationDescending,\n    areaAscending,\n    areaDescending,\n  } = React.useContext(CountriesContext);\n  const [state, setState] = React.useState({\n    countrySearch: \"\",\n    selectedCountry: \"Show All\",\n    countryRegion: \"Show All\",\n  });\n  // const [count, setCount] = React.useState(0);\n\n  var count = 0;\n\n  return (\n    <>\n      <section className=\"grand-container\">\n        {/* /////////////////////////    FILTERS    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ */}\n\n        <section className=\"filters-container\">\n          <span className=\"flex-container\">\n            <input\n              type=\"text\"\n              className=\"search-country\"\n              placeholder=\"Search a country\"\n              value={state.countrySearch}\n              onChange={(event) =>\n                setState({\n                  ...state,\n                  countrySearch: event.target.value.toLowerCase(),\n                })\n              }\n            />\n\n            <select\n              className=\"filter-by-region-select\"\n              onChange={(event) =>\n                setState({ ...state, countryRegion: event.target.value })\n              }\n              value={state.countryRegion}\n            >\n              <option> Filter by Region: </option>\n              <option> Africa </option>\n              <option> Americas </option>\n              <option> Asia </option>\n              <option> Europe </option>\n              <option> Oceania </option>\n            </select>\n\n            <select\n              className=\"choose-country-select\"\n              value={state.selectedCountry}\n              onChange={(event) =>\n                setState({ ...state, selectedCountry: event.target.value })\n              }\n            >\n              <option> Choose a Country: </option>\n              <option disabled> -- Select -- </option>\n              {countries &&\n                countries\n                  .filter((countryFilteredByRegion) =>\n                    state.countryRegion !== \"Show All\"\n                      ? countryFilteredByRegion.region === state.countryRegion\n                      : countryFilteredByRegion\n                  )\n                  .map((country, index) => (\n                    <option value={country.name} key={index}>\n                      {country.name}\n                    </option>\n                  ))}\n            </select>\n          </span>\n          <br />\n          {/* /////////////////////////    FILTER BUTTONS    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ */}\n          <span className=\"flex-container\" id=\"filter-buttons-container\">\n            <button\n              id=\"button-big-population\"\n              type=\"button\"\n              onClick={() => populationAscending(props.population)}\n            >\n              BIGGEST <br />\n              POPULATION\n            </button>\n\n            <button\n              id=\"button-small-population\"\n              type=\"button\"\n              onClick={() => populationDescending(props.population)}\n            >\n              SMALLEST <br />\n              POPULATION\n            </button>\n\n            <button\n              id=\"button-big-area\"\n              type=\"button\"\n              onClick={() => areaAscending(props.area)}\n            >\n              BIGGEST <br />\n              AREA\n            </button>\n\n            <button\n              id=\"button-small-area\"\n              type=\"button\"\n              onClick={() => areaDescending(props.area)}\n            >\n              SMALLEST <br />\n              AREA\n            </button>\n\n            <button\n              id=\"button-reset\"\n              type=\"button\"\n              onClick={(event) =>\n                setState({\n                  countrySearch: \"\",\n                  countryRegion: \"Show All\",\n                  selectedCountry: \"Show All\",\n                })\n              }\n            >\n              RESET\n            </button>\n          </span>\n        </section>\n\n        {/* /////////////////////////   FAVORITES MAPPING   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ */}\n        {countriesFavoriteList.length ? (\n          <div className=\"favorite-list-text-container\">\n            <h3 className=\"favorite-list-text\">Favorite Countries</h3>\n          </div>\n        ) : null}\n\n        <div className=\"cards-container\">\n          {countriesFavoriteList.length ? (\n            <section className=\"favorite-cards-grid\">\n              {countriesFavoriteList.map((country, index) => (\n                <CountryCard\n                  {...country}\n                  key={index}\n                  isRemoveFavoriteDisplayed\n                />\n              ))}\n            </section>\n          ) : null}\n\n          {/* /////////////////////////   MAPPING   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ */}\n\n          <div\n            className=\"cards-grid\"\n            id={`${\n              countriesFavoriteList.length\n                ? \"cards-grid-with-favorite\"\n                : \"cards-grid-without-favorite\"\n            }`}\n          >\n            {/* <h1>COUNT: {count}</h1> */}\n            {state.selectedCountry === \"Show All\" ? (\n              countries &&\n              countries\n                .filter((countryName) =>\n                  state.countrySearch !== \"\"\n                    ? countryName.name\n                        .toLowerCase()\n                        .startsWith(state.countrySearch)\n                    : countryName\n                )\n                .filter((countryFilteredByRegion) =>\n                  state.countryRegion !== \"Show All\"\n                    ? countryFilteredByRegion.region === state.countryRegion\n                    : countryFilteredByRegion\n                )\n                .filter((countryFilteredByRegion) =>\n                  state.countryRegion !== \"Show All\"\n                    ? countryFilteredByRegion.region === state.countryRegion\n                    : countryFilteredByRegion\n                )\n                .map((country, index) => (\n                  <CountryCard\n                    key={index}\n                    {...country}\n                    isAddFavoriteDisplayed\n                  />\n                ))\n            ) : (\n              <CountryCard\n                {...countries.find(\n                  (country) => country.name === state.selectedCountry\n                )}\n                isAddFavoriteDisplayed\n              />\n            )}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n// .map((country, index, arrayForCount) => {\n//                   if (\n//                     arrayForCount.length &&\n//                     arrayForCount.length - 1 === index\n//                   ) {\n//                     return (count = index + 1);\n//                   }\n//                   return (\n//                     <CountryCard\n//                       key={index}\n//                       {...country}\n//                       isAddFavoriteDisplayed\n//                     />\n//                   );\n//                 })\n","/Users/leandrobaseggio/WCS/react-countries/src/components/CountryCard.js",["35","36","37"],"/Users/leandrobaseggio/WCS/react-countries/src/contexts/CountriesContext.jsx",[],"/Users/leandrobaseggio/WCS/react-countries/src/components/CountryDetails.js",["38"],"/Users/leandrobaseggio/WCS/react-countries/src/components/NavBar.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":22,"column":7,"nodeType":"45","messageId":"46","endLine":22,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":3,"column":16,"nodeType":"45","messageId":"46","endLine":3,"endColumn":26},{"ruleId":"43","severity":1,"message":"48","line":10,"column":5,"nodeType":"45","messageId":"46","endLine":10,"endColumn":14},{"ruleId":"43","severity":1,"message":"49","line":11,"column":5,"nodeType":"45","messageId":"46","endLine":11,"endColumn":17},{"ruleId":"50","severity":1,"message":"51","line":18,"column":6,"nodeType":"52","endLine":18,"endColumn":8,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'countries' is assigned a value but never used.","'setCountries' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'countries', 'props.match.params.name', and 'setCountries'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [countries, props.match.params.name, setCountries]",{"range":"59","text":"60"},[521,523],"[countries, props.match.params.name, setCountries]"]